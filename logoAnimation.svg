<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="-110 -110 220 220" xml:space="preserve">
    <defs>
        <path id="maskPath0" fill="none" stroke="black" stroke-width="14"/>
        <path id="maskPath1" fill="none" stroke="black" stroke-width="14"/>
        <path id="maskPath2" fill="none" stroke="black" stroke-width="14"/>
        <circle id="maskBackground" cx="0" cy="0" r="100" fill="white"/>
        <mask id="mask0" x="-100" y="-100" width="200" height="200">
            <use xlink:href="#maskBackground"/>
            <use xlink:href="#maskPath0"/>
            <use xlink:href="#maskPath1"/>
        </mask>
        <mask id="mask1" x="-100" y="-100" width="200" height="200">
            <use xlink:href="#maskBackground"/>
            <use xlink:href="#maskPath1"/>
            <use xlink:href="#maskPath2"/>
        </mask>
        <mask id="mask2" x="-100" y="-100" width="200" height="200">
            <use xlink:href="#maskBackground"/>
            <use xlink:href="#maskPath2"/>
            <use xlink:href="#maskPath0"/>
        </mask>
    </defs>
    <g fill="none" stroke="black" stroke-width="9">
        <circle cx="0" cy="0"/>
        <path mask="url(#mask0)"/>
        <path mask="url(#mask1)"/>
        <path mask="url(#mask2)"/>
    </g>
    <script type="text/javascript"><![CDATA[
        const w = Math.E / (2 * Math.PI), loopCut = 0.355, loopRadius = 75,
              loopDelay = 0.025, circleRadius = 100, circleTime = 0.1, fadeOutTime = 0.2,
              svg = document.getElementsByTagName('svg')[0],
              circle = svg.getElementsByTagName('circle')[1],
              paths = svg.getElementsByTagName('path'),
              masks = svg.getElementsByTagName('mask');

        function appendPoint(path, t) {
            const angle = Math.PI*2*t,
                  posX = (w*Math.sin(angle)+(1-w)*Math.sin(2*angle))*loopRadius,
                  posY = (w*Math.cos(angle)-(1-w)*Math.cos(2*angle))*loopRadius;
            let data = path.getAttribute('d');
            data = (data) ? `${data}L` : 'M';
            path.setAttribute('d', `${data}${posX} ${posY}`);
        }

        for(let i = 0; i < 3; ++i)
            for(let t = loopCut-0.015; t <= loopCut+0.015; t += 0.005)
                appendPoint(paths[i], i/3-t);

        let t = 0;
        function animate() {
            if(t < circleTime)
                circle.setAttribute('r', circleRadius*(t/circleTime));
            if(t > loopDelay+1/3) {
                svg.style.opacity = 1-(t-loopDelay-1/3)/fadeOutTime;
            } else if(t > loopDelay)
                for(let i = 0; i < 3; ++i)
                    appendPoint(paths[3+i], t-loopDelay+loopCut+(i-1)/3);
            if(t > loopDelay+1/3+fadeOutTime) {
                if(svg.finished)
                    svg.finished();
                return;
            }
            t += 0.005;
            window.requestAnimationFrame(animate);
        }
        animate();
    ]]></script>
</svg>
